pipeline {
    agent any
    
    tools {
        gradle 'Gradle 8.2.1' // Ensure this matches the name configured in Global Tool Configuration
    }

    environment {
        // Replace these environment variables with your actual secrets or use Jenkins credentials
        REGISTRY = credentials('acr_registry_url') // Use Jenkins credentials for the ACR registry URL
        SONAR_PROJECT_KEY = credentials('sonar_project_key') // Use Jenkins credentials for the SonarQube project key
        SONAR_ORGANIZATION = credentials('sonar_organization') // Use Jenkins credentials for the SonarQube organization
        SONAR_HOST_URL = 'https://sonarcloud.io' // SonarQube host URL (can also be stored as a secret if needed)
        SONAR_TOKEN = credentials('sonar_token') // Use Jenkins credentials for the SonarQube token
        RESOURCE_GROUP = credentials('resource_group') // Use Jenkins credentials for the Azure resource group
        CLUSTER_NAME = credentials('cluster_name') // Use Jenkins credentials for the Azure Kubernetes cluster name
    }

    triggers {
        // Trigger on GitHub push events
        githubPush() // Ensure you have the GitHub plugin installed
    }

    stages {
        stage('Clone Repository') {
            steps {
                script {
                    cleanWs() // Clean workspace before cloning
                    sh '''
                        git clone https://github.com/trainertitansystems/codeperformer.git
                    '''
                }
            }
        }
        
        stage('Build Gradle Project') {
            steps {
                script {
                    sh '''
                        cd /var/lib/jenkins/workspace/codeperformer/codeperformer
                        gradle build
                    '''
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    sh '''
                        cd /var/lib/jenkins/workspace/codeperformer/codeperformer
                        gradle sonarqube \
                        -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
                        -Dsonar.organization=${SONAR_ORGANIZATION} \
                        -Dsonar.host.url=${SONAR_HOST_URL} \
                        -Dsonar.login=${SONAR_TOKEN}
                    '''
                }
            }
        }

        stage('Docker Build') {
            steps {
                script {
                    sh '''
                        cd /var/lib/jenkins/workspace/codeperformer/codeperformer
                        docker build -t ${REGISTRY}/performance .
                    '''
                }
            }
        }

        stage('Docker Push') {
            steps {
                script {
                    sh '''
                        az acr login -n ${REGISTRY}
                        docker push ${REGISTRY}/performance
                    '''
                }
            }
        }

        stage('Kubeconnect') {
            steps {
                script {
                    sh '''
                        az aks get-credentials --resource-group ${RESOURCE_GROUP} --name ${CLUSTER_NAME} --overwrite-existing
                    '''
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    sh '''
                        kubectl apply -f /var/lib/jenkins/workspace/codeperformer/codeperformer/deployment.yaml
                    '''
                }
            }
        }
    }
}

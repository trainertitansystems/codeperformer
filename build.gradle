plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'jacoco'
    id 'jacoco-report-aggregation' // Use this if aggregating reports
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

// JaCoCo configuration
jacoco {
    toolVersion = "0.8.8" // Ensure you have the correct version
}

jacocoTestReport {
    reports {
        xml {
            destination = file("${buildDir}/jacoco.xml") // Path for XML report
        }
        html {
            destination = file("${buildDir}/jacocoHtml") // Path for HTML report
        }
    }
}

// If using aggregation
reporting {
    reports {
        testCodeCoverageReport(JacocoCoverageReport) {
            testType = TestSuiteType.UNIT_TEST // Specify the test type
        }
    }
}

// Main class configuration
jar {
    manifest {
        attributes(
            'Main-Class': 'com.example.webapp.TrafficApplication' // Your main class
        )
    }
}

// SonarQube configuration
sonarqube {
    properties {
        property "sonar.projectKey", "trainertitansystems_codeperformer"
        property "sonar.organization", "trainertitansystems"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", "${System.getenv('SONAR_TOKEN')}" // Token from environment variable
    }
}
